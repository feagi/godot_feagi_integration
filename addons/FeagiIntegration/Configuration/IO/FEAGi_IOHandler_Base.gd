@tool
extends Resource
class_name FEAGI_IOHandler_Base
## Base class for all IO objects (for recieving and sending data to FEAGI)
## WARNING: Do NOT use this class directly. Use one of the actual device type classes

@export var device_name: StringName
@export var FEAGI_index: int
@export var device_ID: int
@export var is_disabled: bool

var _cached_data: PackedByteArray = [] ## The latest cached data, either generated by [FEAGI_IOHandler_Sensory_Base] on its "refresh_cached_sensory" call, or pass to 

var is_registered_to_godot_device: bool:
	get: return _is_registered_to_godot_device

var _is_registered_to_godot_device: bool = false

func get_device_type() -> StringName:
	# override me in all child device classses to easily get the FEAGI string name of the class
	assert(false, "Do not use 'FEAGI_IOHandler_Base' Directly!")
	return ""

## Most devices will just need this to define their creation to the debugger
func get_debug_interface_device_creation_array() -> Array:
	return [get_device_type(), device_name]
	# [str device type, str name of device]
	
## Get data of this device (reading from a sensor or cached value from a motor)
func get_data_as_byte_array() -> PackedByteArray:
	return _cached_data
