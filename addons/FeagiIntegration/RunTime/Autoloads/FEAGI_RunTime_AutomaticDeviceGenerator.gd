extends Node
class_name FEAGIAutomaticDeviceGenerator
## Some devices are not directly added by the user to their scenes, they are set to be created by the plugin directly. This node facilitates that

func _enter_tree() -> void:
	name = "FEAGI Automatic Device Generator"

## Goes through device arrays, sees if any are calling for an automatically generated Registration Agents, and if so, create them
func add_all_autogenerated_objects(FEAGI_sensors: Dictionary, FEAGI_motors: Dictionary) -> void:
	for sensor_name in FEAGI_sensors:
		print("Adding autogenerated sensor: %s" % sensor_name)
		if FEAGI_sensors[sensor_name] is FEAGI_IOConnector_Sensor_Camera:
			if (FEAGI_sensors[sensor_name] as FEAGI_IOConnector_Sensor_Camera).automatically_create_screengrabber:
				var screenshoter: FEAGI_IOConnector_Sensor_ScreenCapture = FEAGI_IOConnector_Sensor_ScreenCapture.new()
				add_child(screenshoter)
				screenshoter.register_screenshot_system((FEAGI_sensors[sensor_name] as FEAGI_IOConnector_Sensor_Camera).device_friendly_name)
				screenshoter.name = "Screenshoter - " + (FEAGI_sensors[sensor_name] as FEAGI_IOConnector_Sensor_Camera).device_friendly_name
				continue
				
	for motor_name in FEAGI_motors:
		if (FEAGI_motors[motor_name] as FEAGI_IOConnector_Motor_Base).is_using_input_emulation_on_startup():
			print("Adding autogenerated motor: %s" % motor_name)
			var emuInput_emulators: FEAGI_IOConnector_GodotInputEvents = FEAGI_IOConnector_GodotInputEvents.new()
			emuInput_emulators.name = "motor input emulator - " + (FEAGI_motors[motor_name] as FEAGI_IOConnector_Motor_Base).device_friendly_name
			add_child(emuInput_emulators)
			emuInput_emulators.register_motor_to_emulated_inputs(motor_name)
